import discord
from discord import app_commands, ui
import os
import asyncio 
from utils import countdown_fn

MY_GUILD = discord.Object(id=981567258222555186)

class MyClient(discord.Client):
    def __init__(self, *, intents: discord.Intents):
        super().__init__(intents=intents)
        self.tree = app_commands.CommandTree(self)

    async def on_ready(self):
        await client.change_presence(activity=discord.Game(name="üí§ Standby..."))
        print(f'Logged in as {self.user} (ID: {self.user.id})')
        print('------------------------------------------------')

    async def setup_hook(self):
        # This copies the global commands over to your guild.
        self.tree.copy_global_to(guild=MY_GUILD)
        await self.tree.sync(guild=MY_GUILD)

intents = discord.Intents.all()
intents.members = True
client = MyClient(intents=intents)

################################################# Help #################################################
@client.tree.command(description="‚ùî ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠")
async def help(interaction: discord.Interaction):
    # ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏°‡∏ô‡∏π Embed
    util = discord.Embed(title="**‚ùî ‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠**",description="‚ï∞ *üîß ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏≠‡∏£‡∏£‡∏ñ‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå*", color=0x40eefd)
    util.add_field(name="**üîå ‡∏ô‡∏±‡∏ö‡∏ñ‡∏≠‡∏¢‡∏´‡∏•‡∏±‡∏á‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠**", value="`/countdis`", inline=False)

    update = discord.Embed(title="**‚ùî ‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠**",description="‚ï∞ *üìå ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó*", color=0xdcfa80)
    update.add_field(name="1Ô∏è‚É£ V 1.0 | 29/07/2022", value="‚Ä¢ Add: Countdis\n‚Ä¢ Add: feedback")

    select = discord.ui.Select(placeholder="‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏°‡∏ô‡∏π",options=[
    discord.SelectOption(label="‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏≠‡∏£‡∏£‡∏ñ‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå",emoji="üîß",description="‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ",value="util",default=False),
    discord.SelectOption(label="‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó",emoji="üìå",description="‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó",value="update",default=False)
    ])

    async def my_callback(interaction):
        if select.values[0] == "util":
            await interaction.response.edit_message(embed=util)

        elif select.values[0] == "update":
            await interaction.response.edit_message(embed=update)
            
    select.callback = my_callback
    view = discord.ui.View()
    view.add_item(select)

    await interaction.response.send_message(embed=util, view=view)


################################################# Countdis #################################################
client.timestop = 0
client.member_except = []

@client.tree.command(description="‚è±Ô∏è ‡∏ô‡∏±‡∏ö‡∏ñ‡∏≠‡∏¢‡∏´‡∏•‡∏±‡∏á‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠")
@app_commands.describe(time="‡πÉ‡∏™‡πà‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ")
async def countdis(interaction: discord.Interaction, time: str):
    people_counter = 0

    time_int = int(time)
    client.timestop = time_int

    if time_int < 0:
        await interaction.response.send_message("**‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‚ùå**")
    else:
        output = countdown_fn.countdown_fn(time_int)
        await interaction.response.send_message(output)
        for i in range(time_int):
            output = countdown_fn.countdown_fn(time_int)
            await interaction.edit_original_message(content=output)
            await asyncio.sleep(1)
            time_int -= 1

            if client.timestop == -22052603:
                await interaction.edit_original_message(content="**‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏ö‡∏ñ‡∏≠‡∏¢‡∏´‡∏•‡∏±‡∏á‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å üõë**")
                break
        if client.timestop != -22052603:
            try:
                members = interaction.user.voice.channel.members
                channel = interaction.user.voice.channel
            
                await interaction.edit_original_message(content="**‡∏´‡∏°‡∏î‡πÄ‡∏ß‡∏•‡∏≤ üîî**")
                
                if client.member_except == []: # ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏Ñ‡∏£‡∏¢‡∏Å‡πÄ‡∏ß‡πâ‡∏ô
                    members = interaction.user.voice.channel.members
                    for member in members:
                        await member.move_to(None)
                        people_counter += 1

                    client.member_except = []
                    await interaction.followup.send(f"‚èèÔ∏è  **‡∏ï‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏à‡∏≥‡∏ô‡∏ß‡∏ô {people_counter} ‡∏Ñ‡∏ô ‡∏à‡∏≤‡∏Å `{channel}` ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß**")

                else:
                    members = interaction.user.voice.channel.members
                    for member in members:
                        if member not in client.member_except: # ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡πÉ‡∏Ñ‡∏£‡πÑ‡∏°‡πà‡∏≠‡∏≠‡∏Å
                            await member.move_to(None)
                            people_counter += 1

                    await interaction.followup.send(f"‚èèÔ∏è  **‡∏ï‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏à‡∏≥‡∏ô‡∏ß‡∏ô {people_counter} ‡∏Ñ‡∏ô ‡∏à‡∏≤‡∏Å `{channel}` ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß**")
                    
            except:
                await interaction.edit_original_message(content="**‡πÑ‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÅ‡∏•‡πâ‡∏ß‡∏à‡∏∞‡πÉ‡∏´‡πâ‡∏ñ‡∏µ‡∏ö‡∏¢‡∏±‡∏á‡πÑ‡∏á‡∏≠‡∏∞ (‚óè'‚ó°'‚óè)**")


################################################# Except #################################################
client.last_use = [0]

@client.tree.command(name="except",description="‚õî ‡∏¢‡∏Å‡πÄ‡∏ß‡πâ‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á Countdis")
async def except_def(interaction: discord.Interaction):
    user = interaction.user
    if user.id not in client.last_use:
        client.member_except.append(user) # ‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏≠‡∏≠‡∏Å
        client.last_use.pop(0)
        client.last_use.append(user.id)
        await interaction.response.send_message(content=f"**<@{user.id}> ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏¢‡∏Å‡πÄ‡∏ß‡πâ‡∏ô <:Approve:921703512382009354>**")
    else:
        client.member_except.remove(user) # ‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏≠‡∏≠‡∏Å
        client.last_use.pop(0)
        client.last_use.append(0)
        await interaction.response.send_message(content=f"**<@{user.id}> ‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏¢‡∏Å‡πÄ‡∏ß‡πâ‡∏ô <:Deny:921703523111022642>**")


################################################# Feedback #################################################
class FeedbackModal(ui.Modal, title='‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡∏≠‡∏¢‡∏≤‡∏Å‡∏ö‡∏≠‡∏Å?'):
    message = ui.TextInput(label='Answer', style=discord.TextStyle.paragraph)
    
    async def on_submit(self, interaction: discord.Interaction):
        channel = client.get_channel(1002616395495907328)
        await interaction.response.send_message(f'‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢ ‚úÖ', ephemeral=True)
        await channel.send(f"**‡∏à‡∏≤‡∏Å** <@{interaction.user.id}>\n\n{self.message}")

@client.tree.command(name="feedback",description="üì® ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏•‡∏±‡∏á‡πÑ‡∏°‡∏Ñ‡πå‡πÑ‡∏õ‡∏´‡∏≤‡∏ú‡∏π‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á")
async def feedback(interaction: discord.Interaction):
    await interaction.response.send_modal(FeedbackModal())


Token = os.environ['YuukaToken']
client.run(Token)